/* Quick sort algorithm

*/
#include <bits/stdc++.h>
using namespace std;

void swap(int arr[] , int pos1, int pos2){
	int temp;
	temp = arr[pos1];
	arr[pos1] = arr[pos2];
	arr[pos2] = temp;
}

int partition(int arr[], int start, int end, int pivot){
	int PIndex =start;
    
	// Traverse the array from low to high
    for(int i=start;i<=end;i++) {   
        
        // If the current element is smaller than the pivot element
        if(arr[i]<=pivot) {
            // Swap PIndex element with current element.
            swap(arr[PIndex],arr[i]);
            // Increment the pointer.
            PIndex++;
        }
    }
    
    PIndex--;
    
	return PIndex;
}

void quickSort(int arr[], int start, int end){
	if(start < end){
	int pivot = arr[end];
	int pIndex = partition(arr,start,end,pivot);
	
	quickSort(arr,start,pIndex-1);
	quickSort(arr, pIndex+1,end);
	}
}

int main()
{
	int n ;
	cin>>n;
	int arr[n];
	for( int i = 0 ; i < n; i++){
		cin>> arr[i];
	}
	quickSort(arr, 0 , n-1);
	cout<<"The sorted array is: ";
	for( int i = 0 ; i < n; i++){
		cout<< arr[i]<<" ";
	}
	
}
